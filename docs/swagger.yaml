definitions:
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  dto.RegisterResponse:
    properties:
      email:
        type: string
      username:
        type: string
    type: object
  dto.TokenResponse:
    properties:
      refresh_token:
        type: string
      token:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a bookstore application.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Your Project API
  version: "1.0"
paths:
  /:
    get:
      description: Check the health of the application.
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Health Check
      tags:
      - Health
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a JWT token.
      parameters:
      - description: Login Data
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TokenResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Login user
      tags:
      - Auth
  /refresh:
    post:
      consumes:
      - application/json
      description: Refresh the JWT token using a valid refresh token.
      parameters:
      - description: Refresh Token
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/dto.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TokenResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Refresh JWT token
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new User with the system.
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.RegisterResponse'
        "400":
          description: Invalid input
          schema:
            type: string
      summary: Register a new User
      tags:
      - User
swagger: "2.0"
